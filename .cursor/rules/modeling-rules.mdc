---
description: 
globs: docs/*.*
alwaysApply: false
---
Rule Name: modeling-rules
Description: DDDとTDDに基づいたモデリングルール
# 目的
*   ドメインの主要概念、関係性、ビジネスルールを明確化し、思考を整理する。
*   コード実装における一貫性を担保する。
*   UMLクラス図で表現する。

# モデリング原則
- **ドメイン中心**: ビジネスドメインの概念を忠実に表現する。
- **ユビキタス言語**: 設計とコードで一貫した用語を使用する。
- **境界づけられたコンテキスト**: ドメインを明確な境界で区切る。
- **テスト容易性**: モデルがテストしやすいように設計する。

# 各図の作成ルール
## 共通
- UMLを用いて表現。
- ユビキタス言語、ドメイン要素（集約、エンティティ、値オブジェクト、境界づけられたコンテキスト）の特定を目標とする。
- 資料の修正を行った場合、修正したファイル以外を確認し、必要であれば該当ファイルの修正を行う。

## システム関連図
- 主要システムと連携を明確化。
- データフローと主要IFを示す。

## ユーザーストーリー図
- *<役割>として、<機能>したい。なぜなら<理由>のため。*という形で記述。
- INVEST(Independent, Negotiable, Valuable, Estimable, Small, Testable)に従って記述。
- 役割: ユーザーの種類や役割を定義。
- 機能: ユーザーがシステムで達成したい目標。
- 理由: その機能がユーザーにとってなぜ価値があるかを説明。

## オブジェクト図
- 特定シナリオのオブジェクト関係を示す。
- ドメインモデルのインスタンスを具体化。
- ドメインモデルの修正の際は同様に書き換える。

## ドメインモデル図
### 主要構成要素
- **エンティティ (Entity):** 識別子を持つオブジェクト (例: `ユーザー:User`)。
- **値オブジェクト (Value Object):** 属性で記述され、不変なオブジェクト (例: `メールアドレス:EmailAddress`)。
- **集約 (Aggregate):** 関連するエンティティと値オブジェクトのまとまり。整合性の単位。
- **関連 (Association):** 要素間の関係性 (多重度含む)。
- **ドメイン知識/ルール:** ノート（吹き出し）で図中に明記。

### 作成手順
1. **ユビキタス言語の定義:** プロジェクトで使う共通言語（日本語:英語）を定める。
2. **主要要素の洗い出し:** エンティティ、値オブジェクトを特定する。
3. **関連と集約の定義:** 要素間の関連性を定義し、必要に応じて集約でグループ化する。
4. **ビジネスルールの記述:** 重要な制約やルールをノートで書き出す。
5. **ドメインイベントの考慮(任意):** 主要な出来事（例: `ユーザー登録完了:UserRegistered`）を意識し、必要ならノートで補足する。

### 記述ルール
- **命名:** 全要素 `英語: 日本語` (例: `Stock: 在庫`)。
- **メソッド省略:** 属性と関連を中心に記述。メソッドは不要。
- **シンプルさ重視:** 小規模なので、複雑な構造は避ける。

#### エンティティ記述例
``` mermaid
classDiagram
  class Item["(Entity)Item: アイテム"] {
    ItemId: アイテムID
    Price: 価格
  }
  note for English "エンティティの属性は English: 日本語 で表す。"

  class Order["(Entity)Stock: 在庫"] {
    StockId: 在庫ID
    Price: 価格
    QuantityAvailable: 在庫数
    Status: ステータス
  }
  note for Order "初期作成時、ステータスは「販売中」となる。<br>在庫数が0の時は在庫切れ。"
```

#### 値オブジェクト記述例
``` mermaid
classDiagram
  class ItemId["(Value)ItemId: アイテムID"] {
    string
  }
  note for ItemId "値オブジェクトの内容は型のみを記述する"

  class StockId["(Value)StockId: 在庫ID"] {
    string
  }
  note for StockId "12桁で0埋め。"

  class QuantityAvailable["(Value)QuantityAvailable: 在庫数"] {
    number
  }
  note for QuantityAvailable "MAX = 1,000,000<br>MIN = 1"

  class Price["(Value)Price: 価格"] {
    number
  }
  note for Price "日本円のみ扱う。<br>MAX = 1,000,000<br>MIN = 1"

  class Color["(Value)Status: ステータス"]{
    <<enumeration>>
    PreSale: 販売前
    OnSale: 販売中
    Discontinued: 販売停止
  }
  note for Price "列挙型の値オブジェクトは<<enumeration>>を記述した上で English: 日本語 で表す"
```

### 確認ポイント
- **過度な結合はないか？** (変更しづらくないか)
- **ユビキタス言語は一貫しているか？**
- **重要なビジネスルールは表現されているか？**
- **将来の拡張性は考慮されているか？** (小さく始めて育てられるか)










